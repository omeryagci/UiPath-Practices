<Activity mc:Ignorable="sap sap2010" x:Class="compare_two_files" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="compare_two_files_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="compare_two_files" sap:VirtualizedContainerService.HintSize="2076,1763" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap:VirtualizedContainerService.HintSize="452,1740" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="FirstFilePath" />
        <Variable x:TypeArguments="x:String" Name="SecondFilePath" />
        <Variable x:TypeArguments="x:String" Name="FirstFileHashCode" />
        <Variable x:TypeArguments="x:String" Name="SecondFileHashCode" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:SelectFile InitialDirectory="{x:Null}" Multiselect="{x:Null}" SelectedFiles="{x:Null}" DisplayName="Browse For File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="418,170" sap2010:WorkflowViewState.IdRef="SelectFile_1" SelectedFile="[FirstFilePath]" />
      <ui:SelectFile InitialDirectory="{x:Null}" Multiselect="{x:Null}" SelectedFiles="{x:Null}" DisplayName="Browse For File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="418,170" sap2010:WorkflowViewState.IdRef="SelectFile_2" SelectedFile="[SecondFilePath]" />
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim Encryptor As New System.Security.Cryptography.SHA256CryptoServiceProvider&#xD;&#xA; &#xD;&#xA;' Create a fileStream For the file.&#xD;&#xA;Dim fileStream As FileStream = File.OpenRead(FilePath)&#xD;&#xA;' Be sure it's positioned to the beginning of the stream.&#xD;&#xA;fileStream.Position = 0&#xD;&#xA;&#xD;&#xA;' Compute the hash code for the fileStream&#xD;&#xA;Dim bytesToHash() As Byte = Encryptor.ComputeHash(fileStream)&#xD;&#xA; &#xD;&#xA;' Close the fileStream&#xD;&#xA;fileStream.Close()&#xD;&#xA;&#xD;&#xA;' Convert the hash bytes to user-friendly text&#xD;&#xA;For Each item As Byte In bytesToHash&#xD;&#xA;Result += item.ToString(&quot;x2&quot;)&#xD;&#xA;Next" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="418,197" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="FilePath">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="FirstFilePath" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="Result">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="FirstFileHashCode" />
          </OutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="418,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;First File Hash Code : &quot; + FirstFileHashCode]" />
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim Encryptor As New System.Security.Cryptography.SHA256CryptoServiceProvider&#xA; &#xA;' Create a fileStream For the file.&#xA;Dim fileStream As FileStream = File.OpenRead(FilePath)&#xA;' Be sure it's positioned to the beginning of the stream.&#xA;fileStream.Position = 0&#xA;&#xA;' Compute the hash code for the fileStream&#xA;Dim bytesToHash() As Byte = Encryptor.ComputeHash(fileStream)&#xA; &#xA;' Close the fileStream&#xA;fileStream.Close()&#xA;&#xA;' Convert the hash bytes to user-friendly text&#xA;For Each item As Byte In bytesToHash&#xA;Result += item.ToString(&quot;x2&quot;)&#xA;Next" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="418,197" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="FilePath">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="SecondFilePath" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="Result">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="SecondFileHashCode" />
          </OutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="418,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Second File Hash Code : &quot; + SecondFileHashCode]" />
      <If Condition="[FirstFileHashCode.Equals(SecondFileHashCode)]" sap:VirtualizedContainerService.HintSize="418,577" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,224" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,164" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;The files are identical.&quot;]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,224" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,164" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;The content of the files is different.&quot;]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>